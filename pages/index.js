import Head from 'next/head';
import { Fragment, useState, useEffect, useCallback } from 'react';
import ArtistCard from '../components/ArtistCard';
import { getArtistInfoForHome } from '../data';
import { sortArtistAlphabetically, filterArtistList } from '../util/utils';
import styles from './Home.module.css';

export default function Home({ artistList }) {
  const [filteredArtists, setFilteredArtists] = useState(artistList);
  const [searchInput, setSearchInput] = useState('');
  const [artistNameOrder, setArtistNameOrder] = useState('asc');

  const onSearchChange = (e) => {
    setSearchInput(e.target.value);
  };

  const handleArtistOrderClick = () => {
    if (artistNameOrder === 'asc') setArtistNameOrder('desc');
    else setArtistNameOrder('asc');
  };

  const filterAndSortArtists = useCallback(() => {
    if (!searchInput) {
      const sortedResult = sortArtistAlphabetically(artistList, artistNameOrder);
      setFilteredArtists(sortedResult);
      return;
    }

    const filteredResult = filterArtistList(artistList, searchInput);
    const sortedResult = sortArtistAlphabetically(filteredResult, artistNameOrder);
    setFilteredArtists(sortedResult);
  }, [searchInput, artistList, artistNameOrder]);

  useEffect(() => {
    console.log('this ran');
    filterAndSortArtists();
  }, [searchInput, artistList, filterAndSortArtists, artistNameOrder]);

  return (
    <Fragment>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <section className={styles.heroSection}>
          <h1>Better Music</h1>
        </section>

        <section className={styles.artistSection}>
          <h2>Artists</h2>

          <div className={styles.searchContainer}>
            <div className={styles.formGroup}>
              <input
                value={searchInput}
                onChange={onSearchChange}
                type="input"
                className={styles.formField}
                name="artistSearch"
                id="artistSearch"
                required
              />
              <label htmlFor="artistSearch" className={styles.formLabel}>
                Search Artists
              </label>
            </div>
            <div className={styles.artistOrderContainer}>
              <button onClick={handleArtistOrderClick} className={`btn ${artistNameOrder === 'desc' && 'btn-outline'}`}>
                Artist A-Z
              </button>
              <button onClick={handleArtistOrderClick} className={`btn ${artistNameOrder === 'asc' && 'btn-outline'}`}>
                Artist Z-A
              </button>
            </div>
          </div>

          <ul className={styles.artistCardsContainer}>
            {filteredArtists.map((artist, index) => {
              return (
                <li key={`artist-${index}`}>
                  <ArtistCard
                    name={artist.name}
                    id={artist.id}
                    genre={artist.genre}
                    src={artist.profileSrc}
                    alt={artist.profileAlt}
                  />
                </li>
              );
            })}
          </ul>
        </section>
      </main>
    </Fragment>
  );
}

export async function getStaticProps() {
  const artistList = getArtistInfoForHome();

  if (!artistList) {
    return {
      notFound: true,
    };
  }

  return {
    props: { artistList },
    revalidate: 60000,
  };
}
